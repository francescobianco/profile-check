#!/bin/sh

##
# profile-check
#
# Manage your profile with GIT.
#
# Copyright (c) 2020 Francesco Bianco <bianco@javanile.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
##

set -e

dotfiles=".profile .bashrc .zshrc"
rcfile="$HOME/.$(basename $SHELL)rc"

echo "Looking for dot files."
echo "$dotfiles" | tr ' ' '\n' | while read file; do
  [ -f "$file" ] || continue
  [ -n "$(tail -c1 "$file")" ] && echo >> "$file"
  file=$(readlink -f "$file")
  load_check="$file.profile-check"
  echo rm -f \"$load_check\" >> "$file"
  touch "$load_check"
done

echo -n "Launch shell under control: "
rm -f ./.shell.profile-check
ln -s $SHELL ./.shell.profile-check
(sleep 1 && pkill -15 -f "./.shell.profile-check")&
./.shell.profile-check > /dev/null && true
echo "Shell under control was stopped."

echo "Run files analysis:"
echo "$dotfiles" | tr ' ' '\n' | while read file; do
  [ -f "$file" ] || continue
  [ -n "$(tail -c1 "$file")" ] && echo >> "$file"
  file=$(readlink -f "$file")
  load_check="$file.profile-check"
  sed -i '/^rm .*profile-check"$/d' "$file"
  if [ -f "$load_check" ]; then
    echo "[WARN] The file '$file' is present but your shell do not load it by default."
  else
    echo "[INFO] The file '$file' is load by default from your shell."
  fi
done
[ -f "$rcfile" ] || echo "[WARN] The file '$rcfile' is missing, consider to create it."
